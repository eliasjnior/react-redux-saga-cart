{"version":3,"sources":["store/cart/reducers.ts","store/rootReducer.ts","store/cart/types.ts","services/calculateCart.ts","store/cart/actions.ts","store/cart/sagas.ts","store/rootSaga.ts","store/index.ts","styles/Global.ts","helpers/formatCurrency.ts","components/Cart/CartItem/styles.ts","components/Cart/CartItem/index.tsx","components/Cart/styles.ts","components/Cart/index.tsx","services/getProducts.ts","components/Product/styles.ts","components/Product/index.tsx","components/ProductList/styles.ts","components/ProductList/index.tsx","App.tsx","index.tsx"],"names":["initialState","error","loading","items","subtotal","shipping","total","rootReducer","combineReducers","cart","state","action","console","log","type","produce","draftState","foundItem","find","item","product","id","quantity","lineTotal","price","push","splice","indexOf","calculateCart","a","reduce","accumulator","Promise","delay","addProduct","calculateCartSuccess","calculateCartAction","select","call","map","put","message","all","takeLatest","rootSaga","cartSaga","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","run","GlobalStyle","createGlobalStyle","intl","Intl","NumberFormat","style","currency","formatCurrency","format","ActionButton","styled","button","Quantity","div","CartItem","dispatch","useDispatch","formattedPrice","useMemo","formattedLineTotal","handleIncrease","useCallback","handleDecrease","key","className","scope","name","onClick","Table","table","Updating","span","Button","Loading","Cart","useSelector","formattedSubtotal","formattedShipping","formattedTotal","length","colSpan","getProducts","products","Container","Name","h1","Price","p","Image","img","Product","handleAddToCart","src","image","title","section","ProductList","useState","setProducts","setLoading","useEffect","data","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69a49110.chunk.js","sourcesContent":["import produce from 'immer'\n\nimport {\n  ADD_PRODUCT,\n  CALCULATE_CART,\n  CALCULATE_CART_FAILURE,\n  CALCULATE_CART_SUCCESS,\n  CartActionTypes,\n  CartState,\n  REMOVE_PRODUCT,\n} from './types'\n\nconst initialState: CartState = {\n  error: false,\n  loading: false,\n  items: [],\n  subtotal: 0,\n  shipping: 0,\n  total: 0,\n}\n\nexport function cartReducer(\n  state = initialState,\n  action: CartActionTypes,\n): CartState {\n  console.log('reducer:cart', state, action)\n  switch (action.type) {\n    case ADD_PRODUCT:\n      return produce(state, (draftState) => {\n        const foundItem = draftState.items.find(\n          (item) => item.product.id === action.product.id,\n        )\n        if (foundItem) {\n          foundItem.quantity += 1\n          foundItem.lineTotal = foundItem.product.price * foundItem.quantity\n        } else {\n          draftState.items.push({\n            quantity: 1,\n            product: action.product,\n            lineTotal: action.product.price,\n          })\n        }\n      })\n    case REMOVE_PRODUCT:\n      return produce(state, (draftState) => {\n        const foundItem = draftState.items.find(\n          (item) => item.product.id === action.product.id,\n        )\n\n        if (foundItem) {\n          if (foundItem.quantity < 2) {\n            draftState.items.splice(draftState.items.indexOf(foundItem), 1)\n          } else {\n            foundItem.quantity -= 1\n          }\n        }\n\n        return draftState\n      })\n    case CALCULATE_CART:\n      return { ...state, loading: true }\n    case CALCULATE_CART_FAILURE:\n      return { ...state, loading: false, error: true }\n    case CALCULATE_CART_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        shipping: action.cart.shipping,\n        subtotal: action.cart.subtotal,\n        total: action.cart.total,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { cartReducer } from './cart/reducers'\nimport { CartState } from './cart/types'\n\nexport interface RootState {\n  cart: CartState\n}\n\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n})\n\nexport default rootReducer\n","import { Cart } from '~/entities/Cart'\nimport { Product } from '~/entities/Product'\n\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT'\nexport const CALCULATE_CART = 'CALCULATE_CART'\nexport const CALCULATE_CART_SUCCESS = 'CALCULATE_CART_SUCCESS'\nexport const CALCULATE_CART_FAILURE = 'CALCULATE_CART_FAILURE'\n\nexport interface AddProductAction {\n  type: typeof ADD_PRODUCT\n  product: Product\n}\n\nexport interface RemoveProductAction {\n  type: typeof REMOVE_PRODUCT\n  product: Product\n}\n\nexport interface CalculateCartAction {\n  type: typeof CALCULATE_CART\n}\n\nexport interface CalculateCartSuccessAction {\n  type: typeof CALCULATE_CART_SUCCESS\n  cart: Cart\n}\n\nexport interface CalculateCartFailureAction {\n  type: typeof CALCULATE_CART_FAILURE\n  message: string\n}\n\nexport type CartActionTypes =\n  | AddProductAction\n  | RemoveProductAction\n  | CalculateCartAction\n  | CalculateCartSuccessAction\n  | CalculateCartFailureAction\n\nexport interface CartStateItem {\n  quantity: number\n  lineTotal: number\n  product: Product\n}\n\nexport interface CartState {\n  error: boolean\n  loading: boolean\n  items: CartStateItem[]\n  shipping: number\n  subtotal: number\n  total: number\n}\n","import { Cart } from '~/entities/Cart'\nimport { Product } from '~/entities/Product'\n\nimport { Promise } from 'bluebird'\n\nexport interface CalculateCartDto {\n  items: {\n    quantity: number\n    product: Product\n  }[]\n}\n\nexport default async function calculateCart({\n  items,\n}: CalculateCartDto): Promise<Cart> {\n  const shipping = 5\n  const subtotal = items.reduce(\n    (accumulator, item) => accumulator + item.quantity * item.product.price,\n    0,\n  )\n  const total = shipping + subtotal\n\n  return Promise.delay(1000, {\n    items,\n    shipping,\n    subtotal,\n    total,\n  })\n}\n","import { Cart } from '~/entities/Cart'\nimport { Product } from '~/entities/Product'\n\nimport {\n  ADD_PRODUCT,\n  CALCULATE_CART,\n  CALCULATE_CART_FAILURE,\n  CALCULATE_CART_SUCCESS,\n  CartActionTypes,\n  REMOVE_PRODUCT,\n} from './types'\n\nexport function addProduct(product: Product): CartActionTypes {\n  return {\n    type: ADD_PRODUCT,\n    product,\n  }\n}\n\nexport function removeProduct(product: Product): CartActionTypes {\n  return {\n    type: REMOVE_PRODUCT,\n    product,\n  }\n}\n\nexport function calculateCart(): CartActionTypes {\n  return {\n    type: CALCULATE_CART,\n  }\n}\n\nexport function calculateCartSuccess(cart: Cart): CartActionTypes {\n  return {\n    type: CALCULATE_CART_SUCCESS,\n    cart,\n  }\n}\n\nexport function calculateCartFailure(message: string): CartActionTypes {\n  return {\n    type: CALCULATE_CART_FAILURE,\n    message,\n  }\n}\n","import calculateCart from '~/services/calculateCart'\n\nimport { all, call, put, select, takeLatest } from 'redux-saga/effects'\n\nimport { RootState } from '../rootReducer'\nimport {\n  calculateCart as actionCalculateCart,\n  calculateCartFailure,\n  calculateCartSuccess,\n} from './actions'\nimport {\n  ADD_PRODUCT,\n  AddProductAction,\n  CALCULATE_CART,\n  CalculateCartAction,\n} from './types'\n\nfunction* calculateCartAction(action: CalculateCartAction): any {\n  console.log('saga:calculateCartAction', action)\n  try {\n    // Get the current cart state.\n    const state: RootState = yield select((state) => state)\n\n    // Calculate the cart totals.\n    const cart = yield call(calculateCart, {\n      items: state.cart.items.map((item) => ({\n        quantity: item.quantity,\n        product: item.product,\n      })),\n    })\n\n    // Send calculate cart success.\n    yield put(calculateCartSuccess(cart))\n  } catch (e) {\n    yield put(calculateCartFailure('There was an error'))\n  }\n}\n\nfunction* addProduct(action: AddProductAction): any {\n  console.log('saga:addProduct', action)\n  yield put(actionCalculateCart())\n}\n\nexport default all([\n  takeLatest(CALCULATE_CART, calculateCartAction),\n  takeLatest(ADD_PRODUCT, addProduct),\n])\n","import { all } from 'redux-saga/effects'\n\nimport cartSaga from './cart/sagas'\n\nexport default function* rootSaga(): Generator {\n  yield all([cartSaga])\n}\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './rootReducer'\nimport rootSaga from './rootSaga'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  : compose\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware))\n\nconst store = createStore(rootReducer, enhancer)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    box-sizing: border-box;\n  }\n\n  body {\n    --webkit-font-smoothing: antialised;\n    font-family: 'Open Sans', sans-serif;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`\n","const intl = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL',\n})\n\nexport default function formatCurrency(price: number): string {\n  return intl.format(price)\n}\n","import styled from 'styled-components'\n\nexport const ActionButton = styled.button`\n  width: 20px;\n  height: 20px;\n`\n\nexport const Quantity = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useCallback, useMemo } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport formatCurrency from '~/helpers/formatCurrency'\nimport { addProduct, removeProduct } from '~/store/cart/actions'\nimport { CartStateItem } from '~/store/cart/types'\n\nimport { ActionButton, Quantity } from './styles'\n\ninterface CartItem {\n  item: CartStateItem\n}\n\nconst CartItem: React.FC<CartItem> = ({ item }) => {\n  const dispatch = useDispatch()\n\n  const formattedPrice = useMemo(() => formatCurrency(item.product.price), [\n    item.product.price,\n  ])\n  const formattedLineTotal = useMemo(() => formatCurrency(item.lineTotal), [\n    item.lineTotal,\n  ])\n\n  const handleIncrease = useCallback(() => {\n    dispatch(addProduct(item.product))\n  }, [dispatch, item.product])\n\n  const handleDecrease = useCallback(() => {\n    dispatch(removeProduct(item.product))\n  }, [dispatch, item.product])\n\n  return (\n    <tr key={item.product.id} className=\"line-item\">\n      <th scope=\"row\">{item.product.name}</th>\n      <td className=\"price\">{formattedPrice}</td>\n      <td>\n        <Quantity>\n          <ActionButton onClick={handleDecrease}>-</ActionButton>\n          {item.quantity}\n          <ActionButton onClick={handleIncrease}>+</ActionButton>\n        </Quantity>\n      </td>\n      <td className=\"price\">{formattedLineTotal}</td>\n    </tr>\n  )\n}\n\nexport default CartItem\n","import styled from 'styled-components'\n\nexport const Table = styled.table`\n  margin: 30px;\n  border-radius: 3px;\n  border-spacing: 0;\n  border-collapse: collapse;\n  border: 1px solid #ccc;\n  font-weight: 300;\n\n  td,\n  th {\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n  }\n\n  thead {\n    font-size: 1.1em;\n    text-align: center;\n  }\n\n  th[scope='row'] {\n    font-weight: 600;\n    text-align: left;\n  }\n\n  .price {\n    text-align: right;\n  }\n\n  .line-item {\n    th {\n      font-weight: normal;\n    }\n  }\n`\n\nexport const Updating = styled.span`\n  margin-left: 5px;\n  font-weight: 300;\n  font-size: 0.9rem;\n`\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n`\n\nexport const Loading = styled.span`\n  font-size: 0.9rem;\n  font-weight: 300;\n  &:before {\n    content: 'Loading...';\n  }\n`\n","import React, { useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport formatCurrency from '~/helpers/formatCurrency'\nimport { calculateCart } from '~/store/cart/actions'\nimport { RootState } from '~/store/rootReducer'\n\nimport CartItem from './CartItem'\nimport { Button, Loading, Table, Updating } from './styles'\n\nconst Cart: React.FC = () => {\n  const cart = useSelector((state: RootState) => state.cart)\n\n  const dispatch = useDispatch()\n\n  const formattedSubtotal = useMemo(() => formatCurrency(cart.subtotal), [\n    cart.subtotal,\n  ])\n\n  const formattedShipping = useMemo(() => formatCurrency(cart.shipping), [\n    cart.shipping,\n  ])\n\n  const formattedTotal = useMemo(() => formatCurrency(cart.total), [cart.total])\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Line total</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cart.items.length ? (\n          cart.items.map((item) => (\n            <CartItem key={item.product.id} item={item} />\n          ))\n        ) : (\n          <tr>\n            <td colSpan={4}>Your cart is empty</td>\n          </tr>\n        )}\n      </tbody>\n      <tfoot>\n        <tr>\n          <th colSpan={3} scope=\"row\">\n            Subtotal\n          </th>\n          <td className=\"price\">\n            {cart.loading ? <Loading /> : formattedSubtotal}\n          </td>\n        </tr>\n        <tr>\n          <th colSpan={3} scope=\"row\">\n            Shipping\n          </th>\n          <td className=\"price\">\n            {cart.loading ? <Loading /> : formattedShipping}\n          </td>\n        </tr>\n        <tr>\n          <th colSpan={3} scope=\"row\">\n            Total\n          </th>\n          <td className=\"price\">\n            {cart.loading ? <Loading /> : formattedTotal}\n          </td>\n        </tr>\n        <tr>\n          <th colSpan={4} scope=\"row\">\n            <Button onClick={() => dispatch(calculateCart())}>\n              Calculate totals\n            </Button>\n\n            {cart.loading && <Updating>Updating...</Updating>}\n          </th>\n        </tr>\n      </tfoot>\n    </Table>\n  )\n}\n\nexport default Cart\n","import { Product } from '~/entities/Product'\nimport products from '~/fake/products.json'\n\nimport { Promise } from 'bluebird'\n\nexport default async function getProducts(): Promise<Product[]> {\n  return Promise.delay(1000, products)\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  border: 1px solid #ccc;\n  padding: 15px;\n  width: 250px;\n  margin: 15px;\n`\n\nexport const Name = styled.h1`\n  font-size: 1.3rem;\n  font-weight: 300;\n  text-align: center;\n  margin-bottom: 10px;\n`\n\nexport const Price = styled.p`\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 10px;\n`\n\nexport const Image = styled.img`\n  display: block;\n  margin: 0 auto 10px auto;\n  max-width: 100;\n  max-height: 100px;\n`\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  text-transform: uppercase;\n  font-weight: 300;\n  border-radius: 3px;\n  background-color: #1a73e8;\n  border: 1px solid #1a73e8;\n  color: #fff;\n  margin: 0 auto;\n  display: block;\n  transition: all linear 0.1s;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`\n","import React, { useCallback, useMemo } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Product as ProductModel } from '~/entities/Product'\nimport { addProduct } from '~/store/cart/actions'\n\nimport { Button, Container, Image, Name, Price } from './styles'\n\ninterface ProductProps {\n  product: ProductModel\n}\n\nconst Product: React.FC<ProductProps> = ({ product }) => {\n  const dispatch = useDispatch()\n  const formattedPrice = useMemo(() => `R$ ${product.price}`, [product.price])\n\n  const handleAddToCart = useCallback(() => {\n    dispatch(addProduct(product))\n  }, [dispatch, product])\n\n  return (\n    <Container>\n      <Image src={product.image} title={product.name} />\n      <Name>{product.name}</Name>\n      <Price>{formattedPrice}</Price>\n      <Button onClick={handleAddToCart}>Add to cart</Button>\n    </Container>\n  )\n}\n\nexport default Product\n","import styled from 'styled-components'\n\nexport const Container = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 30px 15px;\n`\n\nexport const Loading = styled.div`\n  margin: 15px;\n`\n","import React, { useEffect, useState } from 'react'\n\nimport { Product as ProductModel } from '~/entities/Product'\nimport getProducts from '~/services/getProducts'\n\nimport Product from '../Product'\nimport { Container, Loading } from './styles'\n\nconst ProductList: React.FC = () => {\n  const [products, setProducts] = useState<ProductModel[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setLoading(true)\n      const data = await getProducts()\n      setProducts(data)\n      setLoading(false)\n    })()\n  }, [setProducts])\n\n  return (\n    <Container>\n      {loading ? (\n        <Loading>Loading...</Loading>\n      ) : (\n        products.map((product) => (\n          <Product key={product.id} product={product} />\n        ))\n      )}\n    </Container>\n  )\n}\n\nexport default ProductList\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport store from '~/store'\nimport { GlobalStyle } from '~/styles/Global'\n\nimport Cart from './components/Cart'\nimport ProductList from './components/ProductList'\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <Cart />\n      <ProductList />\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\n\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}